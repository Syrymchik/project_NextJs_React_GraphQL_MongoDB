{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Good\\\\Desktop\\\\Graphql\\\\gateway\\\\src\\\\pages\\\\topic.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, Component } from 'react';\nimport Nav from '../component/nav/nav';\nimport Topic from '../component/topic/topic';\nimport { getPostByPermaLink } from '../lib/api';\n\nclass Topics extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      message: 'props is work'\n    });\n  }\n\n  render() {\n    const {\n      post,\n      query\n    } = this.props;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, __jsx(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }), __jsx(Topic, {\n      post: post,\n      query: query,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Topics;\nexport async function getServerSideProps(context) {\n  const {\n    query\n  } = context;\n  const {\n    permalink = '',\n    commentLimit = 3,\n    repliesLimit = 5\n  } = query;\n  const result = (await getPostByPermaLink(permalink, commentLimit, repliesLimit)) || {};\n  const post = result.topicAndComment;\n  console.log('Post' + JSON.stringify(post));\n  return {\n    props: {\n      post,\n      query\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Good/Desktop/Graphql/gateway/src/pages/topic.js"],"names":["React","Fragment","Component","Nav","Topic","getPostByPermaLink","Topics","message","render","post","query","props","getServerSideProps","context","permalink","commentLimit","repliesLimit","result","topicAndComment","console","log","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,kBAAT,QAAmC,YAAnC;;AAGA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCAEnB;AACJK,MAAAA,OAAO,EAAE;AADL,KAFmB;AAAA;;AAM3BC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkB,KAAKC,KAA7B;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,MAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,IAAb;AAAmB,MAAA,KAAK,EAAEC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAf0B;;AAkB/B,eAAeJ,MAAf;AAGA,OAAO,eAAeM,kBAAf,CAAkCC,OAAlC,EAA2C;AAE9C,QAAM;AAAEH,IAAAA;AAAF,MAAYG,OAAlB;AACA,QAAM;AAAEC,IAAAA,SAAS,GAAG,EAAd;AAAkBC,IAAAA,YAAY,GAAG,CAAjC;AAAoCC,IAAAA,YAAY,GAAG;AAAnD,MAAyDN,KAA/D;AAEA,QAAMO,MAAM,GAAG,CAAC,MAAMZ,kBAAkB,CAACS,SAAD,EAAYC,YAAZ,EAA0BC,YAA1B,CAAzB,KAAqE,EAApF;AAEA,QAAMP,IAAI,GAAGQ,MAAM,CAACC,eAApB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAASC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAArB;AAEA,SAAO;AACHE,IAAAA,KAAK,EAAE;AACHF,MAAAA,IADG;AAEHC,MAAAA;AAFG;AADJ,GAAP;AAMH","sourcesContent":["import React, { Fragment, Component } from 'react';\r\nimport Nav from '../component/nav/nav'\r\nimport Topic from '../component/topic/topic'\r\nimport { getPostByPermaLink } from '../lib/api'\r\n\r\n\r\nclass Topics extends Component {\r\n\r\n    state = {\r\n        message: 'props is work'\r\n    };\r\n\r\n    render(){\r\n        const { post, query } = this.props;\r\n\r\n        return(\r\n            <div>\r\n                <Nav/>\r\n                <Topic post={post} query={query} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Topics;\r\n\r\n\r\nexport async function getServerSideProps(context) {\r\n\r\n    const { query } = context;\r\n    const { permalink = '', commentLimit = 3, repliesLimit = 5 } = query;\r\n\r\n    const result = (await getPostByPermaLink(permalink, commentLimit, repliesLimit)) || {};\r\n\r\n    const post = result.topicAndComment;\r\n\r\n    console.log('Post' + JSON.stringify(post));\r\n\r\n    return {\r\n        props: {\r\n            post,\r\n            query,\r\n        },\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}