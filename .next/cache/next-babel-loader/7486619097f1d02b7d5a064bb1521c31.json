{"ast":null,"code":"const BASE_API = 'http://localhost:3005/api';\n\nconst axios = require('axios');\n\nasync function fetchAPI(query, {\n  variables\n} = {}) {\n  // console.log('fetchAPI: ' + JSON.stringify({ query, variables, }).replace(/\\\\n/g, ''));\n  // const res = axios.post(BASE_API, JSON.stringify({ query, variables, }).replace(/\\\\n/g, ''))\n  //     .then(res => {\n  //         console.log(res);\n  //         return {\n  //         }\n  //     })\n  //     .catch(err => {\n  //         console.log(err);\n  //         return [];\n  //     });\n  const res = await fetch(BASE_API, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query,\n      variables\n    }).replace(/\\\\n/g, '')\n  });\n  console.log('from fetchAPI : ' + res.body.data);\n  const json = await res.json();\n\n  if (json.errors) {\n    console.error(json.errors);\n    throw new Error('Failed to fetch API');\n  }\n\n  return json;\n}\n\nexport async function getAllPostsWithSlug() {\n  const data = fetchAPI(`\n    {\n       hot{\n            topics{\n              subreddit\n              id\n              title\n              score\n              thumbnail\n              url\n            }\n           before\n           after\n           dist\n        }\n    }\n  `);\n  console.log('data from api : ' + data.data);\n  return data === null || data === void 0 ? void 0 : data.data;\n}\nexport async function getAllPostsForHome(preview) {\n  const data = await fetchAPI(`\n    {\n      hot{\n            topics{\n              subreddit\n              id\n              title\n              score\n              thumbnail\n              url\n            }\n           before\n           after\n           dist\n        }\n    }\n    ${responsiveImageFragment}\n  `, {\n    preview\n  });\n  return data === null || data === void 0 ? void 0 : data.hot;\n}","map":{"version":3,"sources":["C:/Users/Good/Desktop/Graphql/gateway/src/lib/api.js"],"names":["BASE_API","axios","require","fetchAPI","query","variables","res","fetch","method","headers","body","JSON","stringify","replace","console","log","data","json","errors","error","Error","getAllPostsWithSlug","getAllPostsForHome","preview","responsiveImageFragment","hot"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAAjB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAGA,eAAeC,QAAf,CAAwBC,KAAxB,EAA+B;AAAEC,EAAAA;AAAF,IAAgB,EAA/C,EAAmD;AAC/C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACP,QAAD,EAAW;AAC9BQ,IAAAA,MAAM,EAAE,MADsB;AAE9BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFqB;AAK9BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBR,MAAAA,KADiB;AAEjBC,MAAAA;AAFiB,KAAf,EAGHQ,OAHG,CAGK,MAHL,EAGa,EAHb;AALwB,GAAX,CAAvB;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBT,GAAG,CAACI,IAAJ,CAASM,IAA1C;AAEA,QAAMC,IAAI,GAAG,MAAMX,GAAG,CAACW,IAAJ,EAAnB;;AACA,MAAIA,IAAI,CAACC,MAAT,EAAiB;AACbJ,IAAAA,OAAO,CAACK,KAAR,CAAcF,IAAI,CAACC,MAAnB;AACA,UAAM,IAAIE,KAAJ,CAAU,qBAAV,CAAN;AACH;;AACD,SAAOH,IAAP;AACH;;AAGD,OAAO,eAAeI,mBAAf,GAAqC;AACxC,QAAML,IAAI,GAAGb,QAAQ,CAAE;;;;;;;;;;;;;;;;GAAF,CAArB;AAkBAW,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBC,IAAI,CAACA,IAAtC;AAEF,SAAOA,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEA,IAAb;AACD;AAED,OAAO,eAAeM,kBAAf,CAAkCC,OAAlC,EAA2C;AAC9C,QAAMP,IAAI,GAAG,MAAMb,QAAQ,CACtB;;;;;;;;;;;;;;;;MAgBHqB,uBAAwB;GAjBC,EAmBvB;AAAED,IAAAA;AAAF,GAnBuB,CAA3B;AAqBA,SAAOP,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAES,GAAb;AACH","sourcesContent":["const BASE_API = 'http://localhost:3005/api';\r\nconst axios = require('axios');\r\n\r\n\r\nasync function fetchAPI(query, { variables } = {}) {\r\n    // console.log('fetchAPI: ' + JSON.stringify({ query, variables, }).replace(/\\\\n/g, ''));\r\n\r\n    // const res = axios.post(BASE_API, JSON.stringify({ query, variables, }).replace(/\\\\n/g, ''))\r\n    //     .then(res => {\r\n    //         console.log(res);\r\n    //         return {\r\n    //         }\r\n    //     })\r\n    //     .catch(err => {\r\n    //         console.log(err);\r\n    //         return [];\r\n    //     });\r\n\r\n\r\n\r\n    const res = await fetch(BASE_API, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            query,\r\n            variables,\r\n        }).replace(/\\\\n/g, ''),\r\n    });\r\n\r\n    console.log('from fetchAPI : ' + res.body.data);\r\n\r\n    const json = await res.json();\r\n    if (json.errors) {\r\n        console.error(json.errors);\r\n        throw new Error('Failed to fetch API')\r\n    }\r\n    return json\r\n}\r\n\r\n\r\nexport async function getAllPostsWithSlug() {\r\n    const data = fetchAPI(`\r\n    {\r\n       hot{\r\n            topics{\r\n              subreddit\r\n              id\r\n              title\r\n              score\r\n              thumbnail\r\n              url\r\n            }\r\n           before\r\n           after\r\n           dist\r\n        }\r\n    }\r\n  `);\r\n\r\n    console.log('data from api : ' + data.data);\r\n\r\n  return data?.data;\r\n}\r\n\r\nexport async function getAllPostsForHome(preview) {\r\n    const data = await fetchAPI(\r\n        `\r\n    {\r\n      hot{\r\n            topics{\r\n              subreddit\r\n              id\r\n              title\r\n              score\r\n              thumbnail\r\n              url\r\n            }\r\n           before\r\n           after\r\n           dist\r\n        }\r\n    }\r\n    ${responsiveImageFragment}\r\n  `,\r\n        { preview }\r\n    )\r\n    return data?.hot\r\n}\r\n"]},"metadata":{},"sourceType":"module"}