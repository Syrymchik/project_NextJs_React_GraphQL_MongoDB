{"ast":null,"code":"const BASE_API = 'http://localhost:3005/api';\n\nconst axios = require('axios');\n\nasync function fetchAPI(query, {\n  variables\n} = {}) {\n  const res = axios.post(BASE_API, JSON.stringify({\n    query,\n    variables\n  }).replace(/\\\\n/g, ''), {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res.data.data;\n  }).catch(err => {\n    console.log(err);\n    return [];\n  }); // const json = await res.json();\n  // if (json.errors) {\n  //     console.error(json.errors);\n  //     throw new Error('Failed to fetch API')\n  // }\n\n  return res;\n}\n\nexport async function getAllPostsWithSlug() {\n  const data = fetchAPI(`\n    {\n       hot{\n            topics{\n              subreddit\n              id\n              title\n              score\n              thumbnail\n              url\n            }\n           before\n           after\n           dist\n        }\n    }\n  `);\n  console.log('data from api : ' + data);\n  return data;\n}\nexport async function getAllPostsForHome(preview) {\n  const data = await fetchAPI(`\n    {\n      hot{\n            topics{\n              subreddit\n              id\n              title\n              score\n              thumbnail\n              url\n            }\n           before\n           after\n           dist\n        }\n    }\n    ${responsiveImageFragment}\n  `, {\n    preview\n  });\n  return data === null || data === void 0 ? void 0 : data.hot;\n}","map":{"version":3,"sources":["C:/Users/Good/Desktop/Graphql/gateway/src/lib/api.js"],"names":["BASE_API","axios","require","fetchAPI","query","variables","res","post","JSON","stringify","replace","headers","then","data","catch","err","console","log","getAllPostsWithSlug","getAllPostsForHome","preview","responsiveImageFragment","hot"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAAjB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAGA,eAAeC,QAAf,CAAwBC,KAAxB,EAA+B;AAAEC,EAAAA;AAAF,IAAgB,EAA/C,EAAmD;AAE/C,QAAMC,GAAG,GAAGL,KAAK,CAACM,IAAN,CAAWP,QAAX,EAAqBQ,IAAI,CAACC,SAAL,CAAe;AAACL,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAf,EAAoCK,OAApC,CAA4C,MAA5C,EAAoD,EAApD,CAArB,EAA8E;AACtFC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAD6E,GAA9E,EAKPC,IALO,CAKFN,GAAG,IAAI;AAET,WAAOA,GAAG,CAACO,IAAJ,CAASA,IAAhB;AACH,GARO,EASPC,KATO,CASDC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAO,EAAP;AACH,GAZO,CAAZ,CAF+C,CAiB/C;AACA;AACA;AACA;AACA;;AACA,SAAOT,GAAP;AACH;;AAGD,OAAO,eAAeY,mBAAf,GAAqC;AACxC,QAAML,IAAI,GAAGV,QAAQ,CAAE;;;;;;;;;;;;;;;;GAAF,CAArB;AAkBAa,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBJ,IAAjC;AAEF,SAAOA,IAAP;AACD;AAED,OAAO,eAAeM,kBAAf,CAAkCC,OAAlC,EAA2C;AAC9C,QAAMP,IAAI,GAAG,MAAMV,QAAQ,CACtB;;;;;;;;;;;;;;;;MAgBHkB,uBAAwB;GAjBC,EAmBvB;AAAED,IAAAA;AAAF,GAnBuB,CAA3B;AAqBA,SAAOP,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAES,GAAb;AACH","sourcesContent":["const BASE_API = 'http://localhost:3005/api';\r\nconst axios = require('axios');\r\n\r\n\r\nasync function fetchAPI(query, { variables } = {}) {\r\n\r\n    const res = axios.post(BASE_API, JSON.stringify({query, variables,}).replace(/\\\\n/g, ''), {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n        .then(res => {\r\n\r\n            return res.data.data;\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            return [];\r\n        });\r\n\r\n\r\n    // const json = await res.json();\r\n    // if (json.errors) {\r\n    //     console.error(json.errors);\r\n    //     throw new Error('Failed to fetch API')\r\n    // }\r\n    return res;\r\n}\r\n\r\n\r\nexport async function getAllPostsWithSlug() {\r\n    const data = fetchAPI(`\r\n    {\r\n       hot{\r\n            topics{\r\n              subreddit\r\n              id\r\n              title\r\n              score\r\n              thumbnail\r\n              url\r\n            }\r\n           before\r\n           after\r\n           dist\r\n        }\r\n    }\r\n  `);\r\n\r\n    console.log('data from api : ' + data);\r\n\r\n  return data;\r\n}\r\n\r\nexport async function getAllPostsForHome(preview) {\r\n    const data = await fetchAPI(\r\n        `\r\n    {\r\n      hot{\r\n            topics{\r\n              subreddit\r\n              id\r\n              title\r\n              score\r\n              thumbnail\r\n              url\r\n            }\r\n           before\r\n           after\r\n           dist\r\n        }\r\n    }\r\n    ${responsiveImageFragment}\r\n  `,\r\n        { preview }\r\n    )\r\n    return data?.hot\r\n}\r\n"]},"metadata":{},"sourceType":"module"}