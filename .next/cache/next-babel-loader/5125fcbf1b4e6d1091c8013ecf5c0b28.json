{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Good\\\\Desktop\\\\Graphql\\\\gateway\\\\src\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, Component } from 'react';\nimport Link from 'next/link';\nimport Message from './message';\nimport Nav from '../component/nav/nav';\nimport { getAllPosts } from '../lib/api';\n\nclass Index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      message: 'props is work'\n    });\n  }\n\n  render() {\n    console.log('props: ' + this.props.query.name);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, __jsx(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, \"Hello World!\"));\n  }\n\n}\n\nexport default Index;\nexport async function getServerSideProps(context) {\n  // console.log('server: param: ' + context.params.index);\n  // console.log('server: query: ' + context.query.after);\n  const {\n    name,\n    limit,\n    after,\n    before\n  } = context.query;\n  const {\n    query\n  } = context;\n  const result = (await getAllPosts(name, limit, after, before)) || [];\n  console.log('Graphql: ' + result); // const allPosts = (await getAllPostsForHome(preview)) || []\n  // const allPosts = (await getAllPostsForHome(preview)) || []\n\n  return {\n    props: {\n      result,\n      query\n    }\n  };\n} // export async function getStaticProps(context) {\n//\n//     const people = [\n//         {v: 'car', name: 'Bruno'},\n//         {v: 'bike', name: 'John'},\n//         {v: 'airplane', name: 'Mick'},\n//         {v: 'sex', name: 'sexy'},\n//     ];\n//\n//     // const { index } = context;\n//     console.log(context);\n//\n//     // people.push({v: index, name: index});\n//\n//\n//     return {\n//         props: {\n//             people,\n//         }, // will be passed to the page component as props\n//     }\n// }\n// export async function getStaticPaths() {\n//     return {\n//         paths: [\n//             { params: { index: 'news' } },\n//             { params: { index: 'hot' } },\n//             { params: { index: 'search' } },\n//         ],\n//         fallback: false  // See the \"fallback\" section below\n//     };\n// }","map":{"version":3,"sources":["C:/Users/Good/Desktop/Graphql/gateway/src/pages/index.js"],"names":["React","Fragment","Component","Link","Message","Nav","getAllPosts","Index","message","render","console","log","props","query","name","getServerSideProps","context","limit","after","before","result"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AAEA,SAASC,WAAT,QAA4B,YAA5B;;AAGA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;;AAAA,mCAClB;AACJM,MAAAA,OAAO,EAAE;AADL,KADkB;AAAA;;AAO1BC,EAAAA,MAAM,GAAE;AAEJC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAAzC;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,CADJ;AAOH;;AAlByB;;AAqB9B,eAAeP,KAAf;AAGA,OAAO,eAAeQ,kBAAf,CAAkCC,OAAlC,EAA2C;AAE9C;AACA;AAEA,QAAM;AAAEF,IAAAA,IAAF;AAAQG,IAAAA,KAAR;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,MAAiCH,OAAO,CAACH,KAA/C;AACA,QAAM;AAAEA,IAAAA;AAAF,MAAYG,OAAlB;AAGA,QAAMI,MAAM,GAAG,CAAC,MAAMd,WAAW,CAACQ,IAAD,EAAMG,KAAN,EAAaC,KAAb,EAAoBC,MAApB,CAAlB,KAAkD,EAAjE;AAEAT,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAcS,MAA1B,EAX8C,CAa9C;AACA;;AAIA,SAAO;AACHR,IAAAA,KAAK,EAAE;AACHQ,MAAAA,MADG;AAEHP,MAAAA;AAFG;AADJ,GAAP;AAOH,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport Link from 'next/link';\nimport Message from './message'\nimport Nav from '../component/nav/nav'\n\nimport { getAllPosts } from '../lib/api'\n\n\nclass Index extends Component {\n    state = {\n        message: 'props is work'\n    };\n\n\n\n    render(){\n\n        console.log('props: ' + this.props.query.name);\n\n        return(\n            <div>\n                <Nav/>\n\n                <div>Hello World!</div>\n            </div>\n        )\n    }\n}\n\nexport default Index;\n\n\nexport async function getServerSideProps(context) {\n\n    // console.log('server: param: ' + context.params.index);\n    // console.log('server: query: ' + context.query.after);\n\n    const { name, limit, after, before } = context.query;\n    const { query } = context;\n\n\n    const result = (await getAllPosts(name,limit, after, before)) || [];\n\n    console.log('Graphql: ' + result);\n\n    // const allPosts = (await getAllPostsForHome(preview)) || []\n    // const allPosts = (await getAllPostsForHome(preview)) || []\n\n\n\n    return {\n        props: {\n            result,\n            query,\n        },\n    }\n\n}\n\n\n// export async function getStaticProps(context) {\n//\n//     const people = [\n//         {v: 'car', name: 'Bruno'},\n//         {v: 'bike', name: 'John'},\n//         {v: 'airplane', name: 'Mick'},\n//         {v: 'sex', name: 'sexy'},\n//     ];\n//\n//     // const { index } = context;\n//     console.log(context);\n//\n//     // people.push({v: index, name: index});\n//\n//\n//     return {\n//         props: {\n//             people,\n//         }, // will be passed to the page component as props\n//     }\n// }\n\n// export async function getStaticPaths() {\n//     return {\n//         paths: [\n//             { params: { index: 'news' } },\n//             { params: { index: 'hot' } },\n//             { params: { index: 'search' } },\n//         ],\n//         fallback: false  // See the \"fallback\" section below\n//     };\n// }\n\n"]},"metadata":{},"sourceType":"module"}