{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Good\\\\Desktop\\\\Graphql\\\\gateway\\\\src\\\\pages\\\\[index].js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, Component } from 'react';\nimport Nav from '../component/nav/nav';\nimport TableComponent from '../component/table/table';\nimport TopicSearch from '../component/topic_search/topic_search';\nimport Pagination from '../component/pagination/pagination';\nimport { getAllPosts } from '../lib/api';\n\nclass Index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      message: 'props is work'\n    });\n  }\n\n  render() {\n    const {\n      index,\n      posts,\n      query,\n      beforeOld,\n      afterOld\n    } = this.props;\n    const {\n      topics,\n      dist,\n      before,\n      after\n    } = posts;\n    const {\n      limit\n    } = query;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, __jsx(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }), __jsx(TableComponent, {\n      list: topics,\n      isBookmark: index === 'bookmark',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Index;\nexport async function getServerSideProps(context) {\n  const {\n    query,\n    params\n  } = context;\n  const {\n    limit = 10,\n    after = '',\n    before = ''\n  } = query;\n  const {\n    index\n  } = params;\n  const afterOld = after,\n        beforeOld = before;\n  const result = (await getAllPosts(index, limit, after, before)) || [];\n  const posts = result[index] || []; // console.log('FetchAPI : ' + JSON.stringify(list));\n\n  return {\n    props: {\n      posts,\n      query,\n      index,\n      afterOld,\n      beforeOld\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Good/Desktop/Graphql/gateway/src/pages/[index].js"],"names":["React","Fragment","Component","Nav","TableComponent","TopicSearch","Pagination","getAllPosts","Index","message","render","index","posts","query","beforeOld","afterOld","props","topics","dist","before","after","limit","getServerSideProps","context","params","result"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AAEA,SAASC,WAAT,QAA4B,YAA5B;;AAGA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAAA;AAAA;;AAAA,mCAElB;AACJO,MAAAA,OAAO,EAAE;AADL,KAFkB;AAAA;;AAM1BC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,KAAhB;AAAuBC,MAAAA,SAAvB;AAAkCC,MAAAA;AAAlC,QAA+C,KAAKC,KAA1D;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,IAAV;AAAgBC,MAAAA,MAAhB;AAAwBC,MAAAA;AAAxB,QAAkCR,KAAxC;AACA,UAAM;AAAES,MAAAA;AAAF,QAAYR,KAAlB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,MAAC,cAAD;AAAgB,MAAA,IAAI,EAAEI,MAAtB;AAA8B,MAAA,UAAU,EAAEN,KAAK,KAAK,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AAlByB;;AAqB9B,eAAeH,KAAf;AAGA,OAAO,eAAec,kBAAf,CAAkCC,OAAlC,EAA2C;AAE9C,QAAM;AAAEV,IAAAA,KAAF;AAASW,IAAAA;AAAT,MAAoBD,OAA1B;AACA,QAAM;AAAEF,IAAAA,KAAK,GAAG,EAAV;AAAcD,IAAAA,KAAK,GAAG,EAAtB;AAA0BD,IAAAA,MAAM,GAAG;AAAnC,MAA0CN,KAAhD;AACA,QAAM;AAAEF,IAAAA;AAAF,MAAYa,MAAlB;AACA,QAAMT,QAAQ,GAAGK,KAAjB;AAAA,QAAwBN,SAAS,GAAGK,MAApC;AAEA,QAAMM,MAAM,GAAG,CAAC,MAAMlB,WAAW,CAACI,KAAD,EAAQU,KAAR,EAAeD,KAAf,EAAsBD,MAAtB,CAAlB,KAAoD,EAAnE;AAGA,QAAMP,KAAK,GAAGa,MAAM,CAACd,KAAD,CAAN,IAAiB,EAA/B,CAV8C,CAY9C;;AAEA,SAAO;AACHK,IAAAA,KAAK,EAAE;AACHJ,MAAAA,KADG;AAEHC,MAAAA,KAFG;AAGHF,MAAAA,KAHG;AAIHI,MAAAA,QAJG;AAKHD,MAAAA;AALG;AADJ,GAAP;AASH","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport Nav from '../component/nav/nav'\nimport TableComponent from '../component/table/table'\nimport TopicSearch from '../component/topic_search/topic_search'\nimport Pagination from '../component/pagination/pagination'\n\nimport { getAllPosts } from '../lib/api'\n\n\nclass Index extends Component {\n\n    state = {\n        message: 'props is work'\n    };\n\n    render(){\n        const { index, posts, query, beforeOld, afterOld } = this.props;\n        const { topics, dist, before, after } = posts;\n        const { limit } = query;\n\n        return(\n            <div>\n                <Nav/>\n                {/*<Pagination after={after} afterOld={afterOld} before={before} beforeOld={beforeOld} index={index} limit={limit} />*/}\n                <TableComponent list={topics} isBookmark={index === 'bookmark'}/>\n            </div>\n        )\n    }\n}\n\nexport default Index;\n\n\nexport async function getServerSideProps(context) {\n\n    const { query, params } = context;\n    const { limit = 10, after = '', before = '' } = query;\n    const { index } = params;\n    const afterOld = after, beforeOld = before;\n\n    const result = (await getAllPosts(index, limit, after, before)) || [];\n\n\n    const posts = result[index] || [];\n\n    // console.log('FetchAPI : ' + JSON.stringify(list));\n\n    return {\n        props: {\n            posts,\n            query,\n            index,\n            afterOld,\n            beforeOld,\n        },\n    }\n}\n"]},"metadata":{},"sourceType":"module"}