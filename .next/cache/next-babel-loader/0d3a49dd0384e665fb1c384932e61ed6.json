{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Good\\\\Desktop\\\\Graphql\\\\gateway\\\\src\\\\component\\\\table\\\\table.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from 'react';\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Link from 'next/link';\nimport { addTopic, deleteTopic } from '../../lib/api';\nimport Router from 'next/router';\nconst StyledTableCell = withStyles(theme => createStyles({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => createStyles({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\nclass Item extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n\n    _defineProperty(this, \"saveTopic\", () => {\n      return () => {\n        const {\n          item\n        } = this.props;\n        addTopic(item.permalink, item.subreddit, item.title, item.score, item.thumbnail, item.url, item.selftext, item.author, item.created);\n      };\n    });\n\n    _defineProperty(this, \"deleteBookMark\", () => {\n      return () => {\n        const {\n          item\n        } = this.props;\n        deleteTopic(item.id);\n        Router.push('/[index]', '/bookmark');\n        console.log('deleted item with id : ' + item.id);\n      };\n    });\n  }\n\n  render() {\n    // , thumbnail, url, selftext, permalink\n    const {\n      subreddit,\n      title,\n      score,\n      permalink\n    } = this.props.item;\n    const {\n      isBookmark = false\n    } = this.props;\n    return __jsx(StyledTableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, __jsx(StyledTableCell, {\n      colSpan: 3,\n      align: \"justify\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, \" \", subreddit, \" \"), __jsx(StyledTableCell, {\n      colSpan: 7,\n      align: \"justify\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, title), __jsx(StyledTableCell, {\n      colSpan: 1,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, score), __jsx(StyledTableCell, {\n      colSpan: 1,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, __jsx(ButtonGroup, {\n      orientation: \"vertical\",\n      color: \"inherit\",\n      \"aria-label\": \"vertical outlined primary button group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, __jsx(Link, {\n      as: '/topic?permalink=' + permalink,\n      href: '/',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, __jsx(Button, {\n      endIcon: __jsx(NavigateNextIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 50\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, \"read\")), __jsx(Button, {\n      endIcon: __jsx(BookmarkIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 46\n        }\n      }),\n      onClick: this.saveTopic(),\n      disabled: isBookmark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, \"save\"), __jsx(Button, {\n      endIcon: __jsx(DeleteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 46\n        }\n      }),\n      onClick: this.deleteBookMark(),\n      disabled: !isBookmark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, \"delete\"), isBookmark)));\n  }\n\n}\n\n_defineProperty(Item, \"propsTypes\", {\n  isBookmark: PropTypes.boolean,\n  item: PropTypes.shape({\n    subreddit: PropTypes.string,\n    title: PropTypes.string,\n    score: PropTypes.number,\n    thumbnail: PropTypes.string,\n    url: PropTypes.string,\n    selftext: PropTypes.string,\n    permalink: PropTypes.string,\n    changePermaLink: PropTypes.func\n  })\n});\n\n_defineProperty(Item, \"defaultProps\", {\n  isBookmark: false,\n  item: {\n    subreddit: 'no content',\n    title: 'no content',\n    score: 0,\n    thumbnail: 'no content',\n    url: 'no content',\n    selftext: 'no content',\n    permalink: 'no content',\n    changePermaLink: vl => {\n      alert(vl);\n    }\n  }\n});\n\nconst headNames = {\n  title1: 'Subreddit',\n  title2: 'Title',\n  title3: 'Selftext',\n  title4: 'Score',\n  title5: 'Action'\n};\n\nclass TableComponent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n  }\n\n  render() {\n    const {\n      list = [],\n      isBookmark\n    } = this.props;\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, __jsx(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, __jsx(Table, {\n      \"aria-label\": \"customized table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, __jsx(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, __jsx(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }, __jsx(StyledTableCell, {\n      colSpan: 3,\n      align: \"center\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 33\n      }\n    }, headNames.title1), __jsx(StyledTableCell, {\n      colSpan: 7,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }, headNames.title2), __jsx(StyledTableCell, {\n      colSpan: 1,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 33\n      }\n    }, headNames.title4), __jsx(StyledTableCell, {\n      colSpan: 1,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 33\n      }\n    }, headNames.title5))), __jsx(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, list.map((item, index) => __jsx(Item, {\n      item: item,\n      key: index,\n      isBookmark: isBookmark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }))))));\n  }\n\n}\n\n_defineProperty(TableComponent, \"propsTypes\", {\n  list: PropTypes.array,\n  isBookmark: PropTypes.boolean,\n  changePermaLink: PropTypes.func\n});\n\n_defineProperty(TableComponent, \"defaultProps\", {\n  list: [],\n  isBookmark: false,\n  changePermaLink: vl => {\n    alert(vl);\n  }\n});\n\nexport default TableComponent;","map":{"version":3,"sources":["C:/Users/Good/Desktop/Graphql/gateway/src/component/table/table.jsx"],"names":["React","Component","Fragment","withStyles","Theme","createStyles","PropTypes","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","ButtonGroup","NavigateNextIcon","BookmarkIcon","DeleteIcon","Link","addTopic","deleteTopic","Router","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","Item","item","props","permalink","subreddit","title","score","thumbnail","url","selftext","author","created","id","push","console","log","render","isBookmark","saveTopic","deleteBookMark","boolean","shape","string","number","changePermaLink","func","vl","alert","headNames","title1","title2","title3","title4","title5","TableComponent","list","map","index","array"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport PropTypes from \"prop-types\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Link from 'next/link'\r\nimport { addTopic, deleteTopic } from '../../lib/api'\r\nimport Router from 'next/router';\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: theme.palette.common.black,\r\n            color: theme.palette.common.white,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n        },\r\n    }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n            },\r\n        },\r\n    }),\r\n)(TableRow);\r\n\r\nclass Item extends Component {\r\n\r\n    state = {};\r\n\r\n    static propsTypes = {\r\n        isBookmark: PropTypes.boolean,\r\n        item: PropTypes.shape({\r\n            subreddit: PropTypes.string,\r\n            title: PropTypes.string,\r\n            score: PropTypes.number,\r\n            thumbnail: PropTypes.string,\r\n            url: PropTypes.string,\r\n            selftext: PropTypes.string,\r\n            permalink: PropTypes.string,\r\n            changePermaLink: PropTypes.func,\r\n        })\r\n    };\r\n\r\n    static defaultProps = {\r\n        isBookmark: false,\r\n        item: {\r\n            subreddit: 'no content',\r\n            title: 'no content',\r\n            score: 0,\r\n            thumbnail: 'no content',\r\n            url: 'no content',\r\n            selftext: 'no content',\r\n            permalink: 'no content',\r\n            changePermaLink: (vl) => { alert(vl) },\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    saveTopic = () => {\r\n        return () => {\r\n            const { item } = this.props;\r\n            addTopic(\r\n                item.permalink,\r\n                item.subreddit,\r\n                item.title,\r\n                item.score,\r\n                item.thumbnail,\r\n                item.url,\r\n                item.selftext,\r\n                item.author ,\r\n                item.created,\r\n            );\r\n        }\r\n    };\r\n\r\n    deleteBookMark = () => {\r\n        return () => {\r\n            const { item} = this.props;\r\n            deleteTopic(item.id);\r\n            Router.push('/[index]', '/bookmark');\r\n            console.log('deleted item with id : ' + item.id);\r\n        }\r\n    };\r\n\r\n    render(){\r\n        // , thumbnail, url, selftext, permalink\r\n        const { subreddit, title, score, permalink } = this.props.item;\r\n        const { isBookmark = false } = this.props;\r\n\r\n        return (\r\n                    <StyledTableRow>\r\n                        <StyledTableCell colSpan={3} align=\"justify\" component=\"th\"\r\n                                         scope=\"row\"> {subreddit} </StyledTableCell>\r\n                        <StyledTableCell colSpan={7} align=\"justify\">{title}</StyledTableCell>\r\n                        <StyledTableCell colSpan={1} align=\"center\">{score}</StyledTableCell>\r\n                        <StyledTableCell colSpan={1} align=\"center\" >\r\n                            <ButtonGroup\r\n                                orientation=\"vertical\"\r\n                                color=\"inherit\"\r\n                                aria-label=\"vertical outlined primary button group\"\r\n                            >\r\n                                <Link as={'/topic?permalink=' + permalink} href={'/'}>\r\n                                    <Button\r\n                                        endIcon={<NavigateNextIcon/>}\r\n                                    >\r\n                                        read\r\n                                    </Button>\r\n                                </Link>\r\n                                <Button\r\n                                    endIcon={<BookmarkIcon/>}\r\n                                    onClick={this.saveTopic()}\r\n                                    disabled={isBookmark}\r\n                                >\r\n                                    save\r\n                                </Button>\r\n                                <Button\r\n                                    endIcon={<DeleteIcon/>}\r\n                                    onClick={\r\n                                        this.deleteBookMark()\r\n                                    }\r\n                                    disabled={!isBookmark}\r\n                                >\r\n                                    delete\r\n                                </Button>\r\n                                {\r\n                                    isBookmark\r\n                                }\r\n                            </ButtonGroup>\r\n                        </StyledTableCell>\r\n                    </StyledTableRow>\r\n        )\r\n    }\r\n}\r\n\r\nconst headNames = {\r\n    title1: 'Subreddit',\r\n    title2: 'Title',\r\n    title3: 'Selftext',\r\n    title4: 'Score',\r\n    title5: 'Action',\r\n};\r\n\r\n\r\nclass TableComponent extends Component {\r\n\r\n    state = { };\r\n\r\n    static propsTypes = {\r\n        list: PropTypes.array,\r\n        isBookmark: PropTypes.boolean,\r\n        changePermaLink: PropTypes.func,\r\n    };\r\n\r\n    static defaultProps = {\r\n        list: [],\r\n        isBookmark: false,\r\n        changePermaLink: (vl) => { alert(vl) },\r\n    };\r\n\r\n    render() {\r\n        const { list = [], isBookmark } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableContainer component={Paper}>\r\n                    <Table  aria-label=\"customized table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell colSpan={3} align=\"center\" component=\"th\"\r\n                                                 scope=\"row\">{headNames.title1}</StyledTableCell>\r\n                                <StyledTableCell colSpan={7} align=\"center\">{headNames.title2}</StyledTableCell>\r\n                                <StyledTableCell colSpan={1} align=\"center\">{headNames.title4}</StyledTableCell>\r\n                                <StyledTableCell colSpan={1} align=\"center\">{headNames.title5}</StyledTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                list.map((item, index) =>\r\n                                    <Item item={item} key={index} isBookmark={isBookmark}/>\r\n                                )\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableComponent;"]},"metadata":{},"sourceType":"module"}