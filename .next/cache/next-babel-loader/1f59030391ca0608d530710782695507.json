{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Good\\\\Desktop\\\\Graphql\\\\gateway\\\\src\\\\pages\\\\[index].js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, Component } from 'react';\nimport Nav from '../component/nav/nav';\nimport TableComponent from '../component/table/table';\nimport Pagination from '../component/pagination/pagination';\nimport { getAllPosts, getAllPostsByText } from '../lib/api';\nimport TopicSearch from \"../component/topic_search/topic_search\";\n\nclass Index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      message: 'props is work'\n    });\n  }\n\n  render() {\n    const {\n      index,\n      posts = {},\n      query,\n      beforeOld,\n      afterOld\n    } = this.props;\n    const {\n      topics,\n      dist,\n      before,\n      after\n    } = posts;\n    const {\n      limit,\n      text\n    } = query;\n\n    let pag = __jsx(Pagination, {\n      after: after,\n      afterOld: afterOld,\n      before: before,\n      beforeOld: beforeOld,\n      index: index,\n      limit: limit,\n      text: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 19\n      }\n    });\n\n    let searchComp = __jsx(TopicSearch, {\n      text: text,\n      limit: limit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 26\n      }\n    });\n\n    if (index === 'bookmark') pag = null;\n    if (index !== 'search') searchComp = null;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, __jsx(Nav, {\n      limit: limit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }), pag, searchComp, __jsx(TableComponent, {\n      list: topics,\n      isBookmark: index === 'bookmark',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Index;\nexport async function getServerSideProps(context) {\n  const {\n    query,\n    params\n  } = context;\n  const {\n    limit = 10,\n    after = '',\n    before = '',\n    text = ''\n  } = query;\n  const {\n    index = 'hot'\n  } = params;\n  const afterOld = after,\n        beforeOld = before;\n  let result;\n  if (index !== 'search') result = (await getAllPosts(index, limit, after, before)) || [];else result = (await getAllPostsByText(limit, after, before, text)) || [];\n  const posts = result[index] || [];\n  return {\n    props: {\n      posts,\n      query,\n      index,\n      afterOld,\n      beforeOld\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Good/Desktop/Graphql/gateway/src/pages/[index].js"],"names":["React","Fragment","Component","Nav","TableComponent","Pagination","getAllPosts","getAllPostsByText","TopicSearch","Index","message","render","index","posts","query","beforeOld","afterOld","props","topics","dist","before","after","limit","text","pag","searchComp","getServerSideProps","context","params","result"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport Nav from '../component/nav/nav'\nimport TableComponent from '../component/table/table'\nimport Pagination from '../component/pagination/pagination'\n\nimport {getAllPosts, getAllPostsByText} from '../lib/api'\nimport TopicSearch from \"../component/topic_search/topic_search\";\n\n\nclass Index extends Component {\n\n    state = {\n        message: 'props is work'\n    };\n\n    render(){\n        const { index, posts = {}, query, beforeOld, afterOld } = this.props;\n        const { topics, dist, before, after } = posts;\n        const { limit, text } = query;\n\n        let pag = <Pagination after={after} afterOld={afterOld} before={before} beforeOld={beforeOld} index={index} limit={limit} text={text} />;\n        let searchComp = <TopicSearch text={text} limit={limit}/>;\n        if (index === 'bookmark') pag = null;\n        if (index !== 'search') searchComp = null;\n\n        return(\n            <div>\n                <Nav limit={limit}/>\n                {pag}\n                {searchComp}\n                <TableComponent list={topics} isBookmark={index === 'bookmark'}/>\n            </div>\n        )\n    }\n}\n\nexport default Index;\n\n\nexport async function getServerSideProps(context) {\n\n    const { query, params } = context;\n    const { limit = 10, after = '', before = '', text = '' } = query;\n    const { index = 'hot' } = params;\n    const afterOld = after, beforeOld = before;\n    let result;\n\n    if (index !== 'search') result = (await getAllPosts(index, limit, after, before)) || [];\n    else result = (await getAllPostsByText(limit, after, before, text)) || [];\n\n    const posts = result[index] || [];\n\n    return {\n        props: {\n            posts,\n            query,\n            index,\n            afterOld,\n            beforeOld,\n        },\n    }\n}\n"]},"metadata":{},"sourceType":"module"}