{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Good\\\\Desktop\\\\Graphql\\\\gateway\\\\src\\\\16_rest_api\\\\rest_api.jsx\";\nimport React, { Component } from 'react';\nimport News from './news_fragment';\nconst BASE_API = 'https://hn.algolia.com/api/v1';\nconst SEARCH_PATH = '/search';\nconst SEARCH_PARAM = 'query=';\n\nclass Api extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchQuery: '',\n      result: {}\n    };\n\n    this.setNews = result => {\n      this.setState({\n        result\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      searchQuery\n    } = this.state;\n    fetch(BASE_API + SEARCH_PATH + '?' + SEARCH_PARAM + searchQuery).then(res => res.json).then(result => this.setNews(result)).catch(error => console.log(error));\n  }\n\n  render() {\n    const {\n      searchQuery,\n      result\n    } = this.state;\n    const {\n      hits = []\n    } = result;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }, \"author\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, \"created\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, \"number comments\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, \"title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, \"points\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, \"url\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, hits.map(({\n      author,\n      created_at,\n      num_comments,\n      objectID,\n      title,\n      points,\n      url\n    }) => /*#__PURE__*/React.createElement(News, {\n      key: objectID,\n      author: author,\n      created: created_at,\n      num_comments: num_comments,\n      title: title,\n      points: points,\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    })))));\n  }\n\n}\n\nexport default Api;","map":{"version":3,"sources":["C:/Users/Good/Desktop/Graphql/gateway/src/16_rest_api/rest_api.jsx"],"names":["React","Component","News","BASE_API","SEARCH_PATH","SEARCH_PARAM","Api","state","searchQuery","result","setNews","setState","componentDidMount","fetch","then","res","json","catch","error","console","log","render","hits","map","author","created_at","num_comments","objectID","title","points","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,MAAMC,QAAQ,GAAG,+BAAjB;AACA,MAAMC,WAAW,GAAG,SAApB;AACA,MAAMC,YAAY,GAAG,QAArB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBM,KAFwB,GAEhB;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAFgB;;AAAA,SAexBC,OAfwB,GAedD,MAAM,IAAI;AAChB,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AAEH,KAlBuB;AAAA;;AAOxBG,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEJ,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACAM,IAAAA,KAAK,CAACV,QAAQ,GAAGC,WAAX,GAAyB,GAAzB,GAA+BC,YAA/B,GAA8CG,WAA/C,CAAL,CACKM,IADL,CACWC,GAAG,IAAIA,GAAG,CAACC,IADtB,EAEKF,IAFL,CAEWL,MAAM,IAAI,KAAKC,OAAL,CAAaD,MAAb,CAFrB,EAGKQ,KAHL,CAGYC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHrB;AAIH;;AAODG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA0B,KAAKF,KAArC;AACA,UAAM;AAAEe,MAAAA,IAAI,GAAG;AAAT,QAAgBb,MAAtB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPJ,CADJ,CADJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQa,IAAI,CAACC,GAAL,CAAS,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,UAAV;AAAsBC,MAAAA,YAAtB;AAAoCC,MAAAA,QAApC;AAA8CC,MAAAA,KAA9C;AAAqDC,MAAAA,MAArD;AAA6DC,MAAAA;AAA7D,KAAD,kBACL,oBAAC,IAAD;AACI,MAAA,GAAG,EAAEH,QADT;AAEI,MAAA,MAAM,EAAEH,MAFZ;AAGI,MAAA,OAAO,EAAEC,UAHb;AAII,MAAA,YAAY,EAAEC,YAJlB;AAKI,MAAA,KAAK,EAAEE,KALX;AAMI,MAAA,MAAM,EAAEC,MANZ;AAOI,MAAA,GAAG,EAAEC,GAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFR,CAZJ,CADJ,CADJ;AAgCH;;AAxDuB;;AA4D5B,eAAexB,GAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport News from './news_fragment';\r\n\r\nconst BASE_API = 'https://hn.algolia.com/api/v1';\r\nconst SEARCH_PATH = '/search';\r\nconst SEARCH_PARAM = 'query=';\r\n\r\nclass Api extends Component {\r\n\r\n    state = {\r\n        searchQuery: '',\r\n        result: {},\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { searchQuery } = this.state;\r\n        fetch(BASE_API + SEARCH_PATH + '?' + SEARCH_PARAM + searchQuery)\r\n            .then( res => res.json )\r\n            .then( result => this.setNews(result))\r\n            .catch( error => console.log(error))\r\n    }\r\n\r\n    setNews = result => {\r\n        this.setState({ result })\r\n\r\n    };\r\n\r\n    render() {\r\n        const { searchQuery, result } = this.state;\r\n        const { hits = [] } = result;\r\n\r\n        return (\r\n            <div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>author</th>\r\n                            <th>created</th>\r\n                            <th>number comments</th>\r\n                            <th>title</th>\r\n                            <th>points</th>\r\n                            <th>url</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            hits.map(({ author, created_at, num_comments, objectID, title, points, url }) => (\r\n                                <News\r\n                                    key={objectID}\r\n                                    author={author}\r\n                                    created={created_at}\r\n                                    num_comments={num_comments}\r\n                                    title={title}\r\n                                    points={points}\r\n                                    url={url}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Api"]},"metadata":{},"sourceType":"module"}