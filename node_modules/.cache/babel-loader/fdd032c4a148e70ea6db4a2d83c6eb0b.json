{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Good\\\\Desktop\\\\Graphql\\\\gateway\\\\src\\\\component\\\\table\\\\table.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { DataContext } from '../app/app';\nconst StyledTableCell = withStyles(theme => createStyles({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => createStyles({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\nclass Item extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    // , thumbnail, url, selftext, permalink\n    const {\n      subreddit,\n      title,\n      score\n    } = this.props.item;\n    return /*#__PURE__*/React.createElement(StyledTableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 3,\n      align: \"justify\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \" \", subreddit, \" \"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 8,\n      align: \"justify\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 1,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, score));\n  }\n\n}\n\nItem.propsTypes = {\n  item: PropTypes.shape({\n    subreddit: PropTypes.string,\n    title: PropTypes.string,\n    score: PropTypes.number,\n    thumbnail: PropTypes.string,\n    url: PropTypes.string,\n    selftext: PropTypes.string,\n    permalink: PropTypes.string,\n    changePermaLink: PropTypes.func\n  })\n};\nItem.defaultProps = {\n  item: {\n    subreddit: 'no content',\n    title: 'no content',\n    score: 0,\n    thumbnail: 'no content',\n    url: 'no content',\n    selftext: 'no content',\n    permalink: 'no content',\n    changePermaLink: vl => {\n      alert(vl);\n    }\n  }\n};\nconst headNames = {\n  title1: 'Subreddit',\n  title2: 'Title',\n  title3: 'Selftext',\n  title4: 'Score'\n};\n\nclass TableComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      list = []\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"customized table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 3,\n      align: \"center\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, headNames.title1), /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 8,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, headNames.title2), /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 1,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, headNames.title4))), /*#__PURE__*/React.createElement(DataContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, ({}) => {\n      /*#__PURE__*/\n      React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 33\n        }\n      }, list.map((item, index) => /*#__PURE__*/React.createElement(Item, {\n        item: item,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 45\n        }\n      })));\n    }))));\n  }\n\n}\n\nTableComponent.propsTypes = {\n  list: PropTypes.array,\n  changePermaLink: PropTypes.func\n};\nTableComponent.defaultProps = {\n  list: [],\n  changePermaLink: vl => {\n    alert(vl);\n  }\n};\nexport default TableComponent;","map":{"version":3,"sources":["C:/Users/Good/Desktop/Graphql/gateway/src/component/table/table.jsx"],"names":["React","Component","Fragment","withStyles","Theme","createStyles","PropTypes","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","DataContext","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","Item","state","render","subreddit","title","score","props","item","propsTypes","shape","string","number","thumbnail","url","selftext","permalink","changePermaLink","func","defaultProps","vl","alert","headNames","title1","title2","title3","title4","TableComponent","list","map","index","array"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport PropTypes from \"prop-types\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { DataContext } from '../app/app'\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: theme.palette.common.black,\r\n            color: theme.palette.common.white,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n        },\r\n    }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n            },\r\n        },\r\n    }),\r\n)(TableRow);\r\n\r\nclass Item extends Component {\r\n\r\n    state = {};\r\n\r\n    static propsTypes = {\r\n        item: PropTypes.shape({\r\n            subreddit: PropTypes.string,\r\n            title: PropTypes.string,\r\n            score: PropTypes.number,\r\n            thumbnail: PropTypes.string,\r\n            url: PropTypes.string,\r\n            selftext: PropTypes.string,\r\n            permalink: PropTypes.string,\r\n            changePermaLink: PropTypes.func,\r\n        })\r\n    };\r\n\r\n    static defaultProps = {\r\n        item: {\r\n            subreddit: 'no content',\r\n            title: 'no content',\r\n            score: 0,\r\n            thumbnail: 'no content',\r\n            url: 'no content',\r\n            selftext: 'no content',\r\n            permalink: 'no content',\r\n            changePermaLink: (vl) => { alert(vl) },\r\n        }\r\n    };\r\n\r\n    render(){\r\n        // , thumbnail, url, selftext, permalink\r\n        const { subreddit, title, score } = this.props.item;\r\n        return (\r\n            <StyledTableRow  >\r\n                <StyledTableCell  colSpan={3} align=\"justify\" component=\"th\" scope=\"row\"> { subreddit } </StyledTableCell >\r\n                <StyledTableCell  colSpan={8} align=\"justify\">{ title }</StyledTableCell >\r\n                <StyledTableCell  colSpan={1} align=\"center\">{ score }</StyledTableCell >\r\n            </StyledTableRow >\r\n        )\r\n    }\r\n}\r\n\r\nconst headNames = {\r\n    title1: 'Subreddit',\r\n    title2: 'Title',\r\n    title3: 'Selftext',\r\n    title4: 'Score',\r\n};\r\n\r\n\r\nclass TableComponent extends Component {\r\n\r\n    state = { };\r\n\r\n    static propsTypes = {\r\n        list: PropTypes.array,\r\n        changePermaLink: PropTypes.func,\r\n    };\r\n\r\n    static defaultProps = {\r\n        list: [],\r\n        changePermaLink: (vl) => { alert(vl) },\r\n    };\r\n\r\n    render() {\r\n        const { list = [] } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableContainer component={Paper}>\r\n                    <Table  aria-label=\"customized table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell  colSpan={3} align=\"center\" component=\"th\" scope=\"row\">{ headNames.title1 }</StyledTableCell >\r\n                                <StyledTableCell  colSpan={8} align=\"center\">{ headNames.title2 }</StyledTableCell >\r\n                                <StyledTableCell  colSpan={1} align=\"center\">{ headNames.title4 }</StyledTableCell >\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <DataContext.Consumer>\r\n                            {({}) => {\r\n                                <TableBody>\r\n                                    {\r\n                                        list.map((item, index) =>\r\n                                            <Item item={item} key={index}/>\r\n                                        )\r\n                                    }\r\n                                </TableBody>\r\n                            }}\r\n                        </DataContext.Consumer>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableComponent;"]},"metadata":{},"sourceType":"module"}