{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Good\\\\Desktop\\\\Graphql\\\\gateway\\\\src\\\\component\\\\table\\\\table.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst StyledTableCell = withStyles(theme => createStyles({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nclass Item extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      subreddit,\n      title,\n      score,\n      thumbnail,\n      url,\n      selftext,\n      permalink\n    } = this.props.item;\n    return /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 3,\n      align: \"justify\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \" \", subreddit, \" \"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 8,\n      align: \"justify\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 1,\n      align: \"justify\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, score));\n  }\n\n}\n\nItem.propsTypes = {\n  item: PropTypes.shape({\n    subreddit: PropTypes.string,\n    title: PropTypes.string,\n    score: PropTypes.number,\n    thumbnail: PropTypes.string,\n    url: PropTypes.string,\n    selftext: PropTypes.string,\n    permalink: PropTypes.string\n  })\n};\nItem.defaultProps = {\n  item: {\n    subreddit: 'no content',\n    title: 'no content',\n    score: 0,\n    thumbnail: 'no content',\n    url: 'no content',\n    selftext: 'no content',\n    permalink: 'no content'\n  }\n};\nconst headNames = {\n  title1: 'Subreddit',\n  title2: 'Title',\n  title3: 'Selftext',\n  title4: 'Score'\n};\n\nclass TableComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      list = []\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"customized table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 3,\n      align: \"center\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, headNames.title1), /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 8,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, headNames.title2), /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 1,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }, headNames.title4))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, list.map((item, index) => /*#__PURE__*/React.createElement(Item, {\n      item: item,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nTableComponent.propsTypes = {\n  list: PropTypes.array\n};\nTableComponent.defaultProps = {\n  list: []\n};\nexport default TableComponent;","map":{"version":3,"sources":["C:/Users/Good/Desktop/Graphql/gateway/src/component/table/table.jsx"],"names":["React","Component","Fragment","withStyles","Theme","createStyles","makeStyles","PropTypes","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","Item","state","render","subreddit","title","score","thumbnail","url","selftext","permalink","props","item","propsTypes","shape","string","number","defaultProps","headNames","title1","title2","title3","title4","TableComponent","list","map","index","array"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,YAA5B,EAA0CC,UAA1C,QAA4D,0BAA5D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,eAAe,GAAGZ,UAAU,CAAEa,KAAD,IAC/BX,YAAY,CAAC;AACTY,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC,KADpC;AAEFC,IAAAA,KAAK,EAAEN,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBG;AAF1B,GADG;AAKTC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AALG,CAAD,CADkB,CAAV,CAUtBf,SAVsB,CAAxB;;AAYA,MAAMgB,IAAN,SAAmBzB,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzB0B,KAFyB,GAEjB,EAFiB;AAAA;;AA4BzBC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA,KAApB;AAA2BC,MAAAA,SAA3B;AAAsCC,MAAAA,GAAtC;AAA2CC,MAAAA,QAA3C;AAAqDC,MAAAA;AAArD,QAAmE,KAAKC,KAAL,CAAWC,IAApF;AACA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAkB,MAAA,OAAO,EAAE,CAA3B;AAA8B,MAAA,KAAK,EAAC,SAApC;AAA8C,MAAA,SAAS,EAAC,IAAxD;AAA6D,MAAA,KAAK,EAAC,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA4ER,SAA5E,MADJ,eAEI,oBAAC,eAAD;AAAkB,MAAA,OAAO,EAAE,CAA3B;AAA8B,MAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDC,KAAhD,CAFJ,eAGI,oBAAC,eAAD;AAAkB,MAAA,OAAO,EAAE,CAA3B;AAA8B,MAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDC,KAAhD,CAHJ,CADJ;AAOH;;AArCwB;;AAAvBL,I,CAIKY,U,GAAa;AAChBD,EAAAA,IAAI,EAAE9B,SAAS,CAACgC,KAAV,CAAgB;AAClBV,IAAAA,SAAS,EAAEtB,SAAS,CAACiC,MADH;AAElBV,IAAAA,KAAK,EAAEvB,SAAS,CAACiC,MAFC;AAGlBT,IAAAA,KAAK,EAAExB,SAAS,CAACkC,MAHC;AAIlBT,IAAAA,SAAS,EAAEzB,SAAS,CAACiC,MAJH;AAKlBP,IAAAA,GAAG,EAAE1B,SAAS,CAACiC,MALG;AAMlBN,IAAAA,QAAQ,EAAE3B,SAAS,CAACiC,MANF;AAOlBL,IAAAA,SAAS,EAAE5B,SAAS,CAACiC;AAPH,GAAhB;AADU,C;AAJlBd,I,CAgBKgB,Y,GAAe;AAClBL,EAAAA,IAAI,EAAE;AACFR,IAAAA,SAAS,EAAE,YADT;AAEFC,IAAAA,KAAK,EAAE,YAFL;AAGFC,IAAAA,KAAK,EAAE,CAHL;AAIFC,IAAAA,SAAS,EAAE,YAJT;AAKFC,IAAAA,GAAG,EAAE,YALH;AAMFC,IAAAA,QAAQ,EAAE,YANR;AAOFC,IAAAA,SAAS,EAAE;AAPT;AADY,C;AAwB1B,MAAMQ,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAE,WADM;AAEdC,EAAAA,MAAM,EAAE,OAFM;AAGdC,EAAAA,MAAM,EAAE,UAHM;AAIdC,EAAAA,MAAM,EAAE;AAJM,CAAlB;;AAQA,MAAMC,cAAN,SAA6B/C,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnC0B,KAFmC,GAE3B,EAF2B;AAAA;;AAYnCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEqB,MAAAA,IAAI,GAAG;AAAT,QAAgB,KAAKb,KAA3B;AAEA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AAAgB,MAAA,SAAS,EAAEtB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAQ,oBAAW,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAkB,MAAA,OAAO,EAAE,CAA3B;AAA8B,MAAA,KAAK,EAAC,QAApC;AAA6C,MAAA,SAAS,EAAC,IAAvD;AAA4D,MAAA,KAAK,EAAC,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0E6B,SAAS,CAACC,MAApF,CADJ,eAEI,oBAAC,eAAD;AAAkB,MAAA,OAAO,EAAE,CAA3B;AAA8B,MAAA,KAAK,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+CD,SAAS,CAACE,MAAzD,CAFJ,eAGI,oBAAC,eAAD;AAAkB,MAAA,OAAO,EAAE,CAA3B;AAA8B,MAAA,KAAK,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+CF,SAAS,CAACI,MAAzD,CAHJ,CADJ,CADJ,eAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIE,IAAI,CAACC,GAAL,CAAS,CAACb,IAAD,EAAOc,KAAP,kBACL,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEd,IAAZ;AAAkB,MAAA,GAAG,EAAEc,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CARJ,CADJ,CADJ,CADJ;AAsBH;;AArCkC;;AAAjCH,c,CAIKV,U,GAAa;AAChBW,EAAAA,IAAI,EAAE1C,SAAS,CAAC6C;AADA,C;AAJlBJ,c,CAQKN,Y,GAAe;AAClBO,EAAAA,IAAI,EAAE;AADY,C;AAgC1B,eAAeD,cAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from \"prop-types\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: theme.palette.common.black,\r\n            color: theme.palette.common.white,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n        },\r\n    }),\r\n)(TableCell);\r\n\r\nclass Item extends Component {\r\n\r\n    state = {};\r\n\r\n    static propsTypes = {\r\n        item: PropTypes.shape({\r\n            subreddit: PropTypes.string,\r\n            title: PropTypes.string,\r\n            score: PropTypes.number,\r\n            thumbnail: PropTypes.string,\r\n            url: PropTypes.string,\r\n            selftext: PropTypes.string,\r\n            permalink: PropTypes.string,\r\n        })\r\n    };\r\n\r\n    static defaultProps = {\r\n        item: {\r\n            subreddit: 'no content',\r\n            title: 'no content',\r\n            score: 0,\r\n            thumbnail: 'no content',\r\n            url: 'no content',\r\n            selftext: 'no content',\r\n            permalink: 'no content',\r\n        }\r\n    };\r\n\r\n    render(){\r\n        const { subreddit, title, score, thumbnail, url, selftext, permalink } = this.props.item;\r\n        return (\r\n            <TableRow >\r\n                <StyledTableCell  colSpan={3} align=\"justify\" component=\"th\" scope=\"row\"> { subreddit } </StyledTableCell >\r\n                <StyledTableCell  colSpan={8} align=\"justify\">{ title }</StyledTableCell >\r\n                <StyledTableCell  colSpan={1} align=\"justify\">{ score }</StyledTableCell >\r\n            </TableRow>\r\n        )\r\n    }\r\n}\r\n\r\nconst headNames = {\r\n    title1: 'Subreddit',\r\n    title2: 'Title',\r\n    title3: 'Selftext',\r\n    title4: 'Score',\r\n};\r\n\r\n\r\nclass TableComponent extends Component {\r\n\r\n    state = { };\r\n\r\n    static propsTypes = {\r\n        list: PropTypes.array\r\n    };\r\n\r\n    static defaultProps = {\r\n        list: []\r\n    };\r\n\r\n    render() {\r\n        const { list = [] } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableContainer component={Paper}>\r\n                    <Table  aria-label=\"customized table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell  colSpan={3} align=\"center\" component=\"th\" scope=\"row\">{ headNames.title1 }</StyledTableCell >\r\n                                <StyledTableCell  colSpan={8} align=\"center\">{ headNames.title2 }</StyledTableCell >\r\n                                <StyledTableCell  colSpan={1} align=\"center\">{ headNames.title4 }</StyledTableCell >\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {\r\n                            list.map((item, index ) =>\r\n                                <Item item={item} key={index} />\r\n                            )\r\n                        }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableComponent;"]},"metadata":{},"sourceType":"module"}