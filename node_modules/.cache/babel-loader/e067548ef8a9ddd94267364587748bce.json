{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Good\\\\Desktop\\\\Graphql\\\\gateway\\\\src\\\\component\\\\table\\\\table.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass Item extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      subreddit,\n      title,\n      score,\n      thumbnail,\n      url,\n      selftext,\n      permalink\n    } = this.props.item;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, subreddit), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, score), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, thumbnail), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, url), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, selftext), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, permalink));\n  }\n\n}\n\nItem.propsTypes = {\n  item: PropTypes.shape({\n    subreddit: PropTypes.string,\n    title: PropTypes.string,\n    score: PropTypes.number,\n    thumbnail: PropTypes.string,\n    url: PropTypes.string,\n    selftext: PropTypes.string,\n    permalink: PropTypes.string\n  })\n};\nItem.defaultProps = {\n  item: {\n    subreddit: 'no content',\n    title: 'no content',\n    score: 0,\n    thumbnail: 'no content',\n    url: 'no content',\n    selftext: 'no content',\n    permalink: 'no content'\n  }\n};\n\nclass TableComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      list = []\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, list.map((item, index) => /*#__PURE__*/React.createElement(Item, {\n      item: item,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nTableComponent.propsTypes = {\n  list: PropTypes.array\n};\nTableComponent.defaultProps = {\n  list: []\n};\nexport default TableComponent;","map":{"version":3,"sources":["C:/Users/Good/Desktop/Graphql/gateway/src/component/table/table.jsx"],"names":["React","Component","Fragment","PropTypes","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Item","state","render","subreddit","title","score","thumbnail","url","selftext","permalink","props","item","propsTypes","shape","string","number","defaultProps","TableComponent","list","map","index","array"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nclass Item extends Component {\r\n\r\n    state = {};\r\n\r\n    static propsTypes = {\r\n        item: PropTypes.shape({\r\n            subreddit: PropTypes.string,\r\n            title: PropTypes.string,\r\n            score: PropTypes.number,\r\n            thumbnail: PropTypes.string,\r\n            url: PropTypes.string,\r\n            selftext: PropTypes.string,\r\n            permalink: PropTypes.string,\r\n        })\r\n    };\r\n\r\n    static defaultProps = {\r\n        item: {\r\n            subreddit: 'no content',\r\n            title: 'no content',\r\n            score: 0,\r\n            thumbnail: 'no content',\r\n            url: 'no content',\r\n            selftext: 'no content',\r\n            permalink: 'no content',\r\n        }\r\n    };\r\n\r\n    render(){\r\n        const { subreddit, title, score, thumbnail, url, selftext, permalink } = this.props.item;\r\n        return (\r\n            <tr>\r\n                <td>{ subreddit }</td>\r\n                <td>{ title }</td>\r\n                <td>{ score }</td>\r\n                <td>{ thumbnail }</td>\r\n                <td>{ url }</td>\r\n                <td>{ selftext }</td>\r\n                <td>{ permalink }</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass TableComponent extends Component {\r\n\r\n    state = { };\r\n\r\n    static propsTypes = {\r\n        list: PropTypes.array\r\n    };\r\n\r\n    static defaultProps = {\r\n        list: []\r\n    };\r\n\r\n    render() {\r\n        const { list = [] } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <table>\r\n                    <tbody>\r\n                    {\r\n                        list.map((item, index ) =>\r\n                            <Item item={item} key={index} />\r\n                        )\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TableComponent;"]},"metadata":{},"sourceType":"module"}