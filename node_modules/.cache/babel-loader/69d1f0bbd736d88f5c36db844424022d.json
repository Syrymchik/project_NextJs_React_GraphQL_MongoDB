{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Good\\\\Desktop\\\\Graphql\\\\gateway\\\\src\\\\component\\\\table\\\\table.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport { DataContext } from '../app/app';\nimport { Link } from \"react-router-dom\";\nimport withHoc from './tableHoc';\nconst StyledTableCell = withStyles(theme => createStyles({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => createStyles({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\nclass Item extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.saveTopic = () => {\n      return () => {\n        const {\n          addTopic,\n          item\n        } = this.props;\n        addTopic({\n          score: item.score,\n          title: item.title,\n          subreddit: item.subreddit,\n          thumbnail: item.thumbnail,\n          url: item.url,\n          selftext: item.selftext,\n          permalink: item.permalink,\n          author: item.author,\n          created: item.created\n        });\n      };\n    };\n\n    this.deleteBookMark = () => {\n      return () => {\n        const {\n          deleteTopic,\n          item\n        } = this.props;\n        deleteTopic({\n          id: item.id\n        });\n      };\n    };\n  }\n\n  render() {\n    // , thumbnail, url, selftext, permalink\n    const {\n      subreddit,\n      title,\n      score,\n      permalink,\n      isBookmark = false\n    } = this.props.item;\n    return /*#__PURE__*/React.createElement(DataContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, ({\n      changePermaLink,\n      count\n    }) => /*#__PURE__*/React.createElement(StyledTableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 3,\n      align: \"justify\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \" \", subreddit, \" \"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 7,\n      align: \"justify\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, title), /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 1,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, score), /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 1,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      orientation: \"vertical\",\n      color: \"inherit\",\n      \"aria-label\": \"vertical outlined primary button group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/topic',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: changePermaLink(permalink),\n      endIcon: /*#__PURE__*/React.createElement(NavigateNextIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 50\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    }, \"read\")), /*#__PURE__*/React.createElement(Button, {\n      endIcon: /*#__PURE__*/React.createElement(BookmarkIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 46\n        }\n      }),\n      onClick: this.saveTopic(),\n      disabled: !isBookmark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }, \"save\"), /*#__PURE__*/React.createElement(Button, {\n      endIcon: /*#__PURE__*/React.createElement(BookmarkIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 46\n        }\n      }),\n      onClick: this.deleteBookMark(),\n      disabled: !isBookmark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }, \"delete\")))));\n  }\n\n}\n\nItem.propsTypes = {\n  isBookmark: PropTypes.boolean,\n  item: PropTypes.shape({\n    subreddit: PropTypes.string,\n    title: PropTypes.string,\n    score: PropTypes.number,\n    thumbnail: PropTypes.string,\n    url: PropTypes.string,\n    selftext: PropTypes.string,\n    permalink: PropTypes.string,\n    changePermaLink: PropTypes.func\n  })\n};\nItem.defaultProps = {\n  isBookmark: false,\n  item: {\n    subreddit: 'no content',\n    title: 'no content',\n    score: 0,\n    thumbnail: 'no content',\n    url: 'no content',\n    selftext: 'no content',\n    permalink: 'no content',\n    changePermaLink: vl => {\n      alert(vl);\n    }\n  }\n};\nconst headNames = {\n  title1: 'Subreddit',\n  title2: 'Title',\n  title3: 'Selftext',\n  title4: 'Score',\n  title5: 'Action'\n};\n\nclass TableComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      list = [],\n      addTopic,\n      deleteTopic,\n      isBookmark\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"customized table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 3,\n      align: \"center\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 33\n      }\n    }, headNames.title1), /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 7,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, headNames.title2), /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 1,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }, headNames.title4), /*#__PURE__*/React.createElement(StyledTableCell, {\n      colSpan: 1,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 33\n      }\n    }, headNames.title5))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, list.map((item, index) => /*#__PURE__*/React.createElement(Item, {\n      item: item,\n      key: index,\n      addTopic: addTopic,\n      deleteTopic: deleteTopic,\n      isBookmark: isBookmark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 37\n      }\n    }))))));\n  }\n\n}\n\nTableComponent.propsTypes = {\n  list: PropTypes.array,\n  isBookmark: PropTypes.boolean,\n  changePermaLink: PropTypes.func\n};\nTableComponent.defaultProps = {\n  list: [],\n  isBookmark: false,\n  changePermaLink: vl => {\n    alert(vl);\n  }\n};\nexport default withHoc(TableComponent);","map":{"version":3,"sources":["C:/Users/Good/Desktop/Graphql/gateway/src/component/table/table.jsx"],"names":["React","Component","Fragment","withStyles","Theme","createStyles","PropTypes","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","ButtonGroup","NavigateNextIcon","BookmarkIcon","DataContext","Link","withHoc","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","Item","state","saveTopic","addTopic","item","props","score","title","subreddit","thumbnail","url","selftext","permalink","author","created","deleteBookMark","deleteTopic","id","render","isBookmark","changePermaLink","count","propsTypes","boolean","shape","string","number","func","defaultProps","vl","alert","headNames","title1","title2","title3","title4","title5","TableComponent","list","map","index","array"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,YAA5B,QAAgD,0BAAhD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,MAAMC,eAAe,GAAGlB,UAAU,CAAEmB,KAAD,IAC/BjB,YAAY,CAAC;AACTkB,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC,KADpC;AAEFC,IAAAA,KAAK,EAAEN,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBG;AAF1B,GADG;AAKTC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AALG,CAAD,CADkB,CAAV,CAUtBtB,SAVsB,CAAxB;AAYA,MAAMuB,cAAc,GAAG7B,UAAU,CAAEmB,KAAD,IAC9BjB,YAAY,CAAC;AACT4B,EAAAA,IAAI,EAAE;AACF,0BAAsB;AAClBT,MAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcS,MAAd,CAAqBC;AADpB;AADpB;AADG,CAAD,CADiB,CAAV,CAQrBvB,QARqB,CAAvB;;AAUA,MAAMwB,IAAN,SAAmBnC,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzBoC,KAFyB,GAEjB,EAFiB;;AAAA,SAgCzBC,SAhCyB,GAgCb,MAAM;AACd,aAAO,MAAM;AACT,cAAM;AAACC,UAAAA,QAAD;AAAWC,UAAAA;AAAX,YAAoB,KAAKC,KAA/B;AACAF,QAAAA,QAAQ,CAAC;AACLG,UAAAA,KAAK,EAAEF,IAAI,CAACE,KADP;AAELC,UAAAA,KAAK,EAAEH,IAAI,CAACG,KAFP;AAGLC,UAAAA,SAAS,EAAEJ,IAAI,CAACI,SAHX;AAILC,UAAAA,SAAS,EAAEL,IAAI,CAACK,SAJX;AAKLC,UAAAA,GAAG,EAAEN,IAAI,CAACM,GALL;AAMLC,UAAAA,QAAQ,EAAEP,IAAI,CAACO,QANV;AAOLC,UAAAA,SAAS,EAAER,IAAI,CAACQ,SAPX;AAQLC,UAAAA,MAAM,EAAET,IAAI,CAACS,MARR;AASLC,UAAAA,OAAO,EAAEV,IAAI,CAACU;AATT,SAAD,CAAR;AAWH,OAbD;AAcH,KA/CwB;;AAAA,SAiDzBC,cAjDyB,GAiDR,MAAM;AACnB,aAAO,MAAM;AACT,cAAM;AAACC,UAAAA,WAAD;AAAcZ,UAAAA;AAAd,YAAsB,KAAKC,KAAjC;AACAW,QAAAA,WAAW,CAAC;AAACC,UAAAA,EAAE,EAAEb,IAAI,CAACa;AAAV,SAAD,CAAX;AACH,OAHD;AAIH,KAtDwB;AAAA;;AAwDzBC,EAAAA,MAAM,GAAE;AACJ;AACA,UAAM;AAAEV,MAAAA,SAAF;AAAaD,MAAAA,KAAb;AAAoBD,MAAAA,KAApB;AAA2BM,MAAAA,SAA3B;AAAsCO,MAAAA,UAAU,GAAG;AAAnD,QAA6D,KAAKd,KAAL,CAAWD,IAA9E;AAEA,wBACI,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAACgB,MAAAA,eAAD;AAAkBC,MAAAA;AAAlB,KAAD,kBACG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAE,CAA1B;AAA6B,MAAA,KAAK,EAAC,SAAnC;AAA6C,MAAA,SAAS,EAAC,IAAvD;AACiB,MAAA,KAAK,EAAC,KADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAC+Bb,SAD/B,MADJ,eAGI,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAE,CAA1B;AAA6B,MAAA,KAAK,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8CD,KAA9C,CAHJ,eAII,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAE,CAA1B;AAA6B,MAAA,KAAK,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CD,KAA7C,CAJJ,eAKI,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAE,CAA1B;AAA6B,MAAA,KAAK,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AACI,MAAA,WAAW,EAAC,UADhB;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,oBAAW,wCAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAEc,eAAe,CAACR,SAAD,CAD5B;AAEI,MAAA,OAAO,eAAE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CALJ,eAeI,oBAAC,MAAD;AACI,MAAA,OAAO,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADb;AAEI,MAAA,OAAO,EAAE,KAAKV,SAAL,EAFb;AAGI,MAAA,QAAQ,EAAE,CAACiB,UAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAsBI,oBAAC,MAAD;AACI,MAAA,OAAO,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADb;AAEI,MAAA,OAAO,EAAE,KAAKJ,cAAL,EAFb;AAGI,MAAA,QAAQ,EAAE,CAACI,UAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBJ,CADJ,CALJ,CAFR,CADJ;AA8CH;;AA1GwB;;AAAvBnB,I,CAIKsB,U,GAAa;AAChBH,EAAAA,UAAU,EAAEjD,SAAS,CAACqD,OADN;AAEhBnB,EAAAA,IAAI,EAAElC,SAAS,CAACsD,KAAV,CAAgB;AAClBhB,IAAAA,SAAS,EAAEtC,SAAS,CAACuD,MADH;AAElBlB,IAAAA,KAAK,EAAErC,SAAS,CAACuD,MAFC;AAGlBnB,IAAAA,KAAK,EAAEpC,SAAS,CAACwD,MAHC;AAIlBjB,IAAAA,SAAS,EAAEvC,SAAS,CAACuD,MAJH;AAKlBf,IAAAA,GAAG,EAAExC,SAAS,CAACuD,MALG;AAMlBd,IAAAA,QAAQ,EAAEzC,SAAS,CAACuD,MANF;AAOlBb,IAAAA,SAAS,EAAE1C,SAAS,CAACuD,MAPH;AAQlBL,IAAAA,eAAe,EAAElD,SAAS,CAACyD;AART,GAAhB;AAFU,C;AAJlB3B,I,CAkBK4B,Y,GAAe;AAClBT,EAAAA,UAAU,EAAE,KADM;AAElBf,EAAAA,IAAI,EAAE;AACFI,IAAAA,SAAS,EAAE,YADT;AAEFD,IAAAA,KAAK,EAAE,YAFL;AAGFD,IAAAA,KAAK,EAAE,CAHL;AAIFG,IAAAA,SAAS,EAAE,YAJT;AAKFC,IAAAA,GAAG,EAAE,YALH;AAMFC,IAAAA,QAAQ,EAAE,YANR;AAOFC,IAAAA,SAAS,EAAE,YAPT;AAQFQ,IAAAA,eAAe,EAAGS,EAAD,IAAQ;AAAEC,MAAAA,KAAK,CAACD,EAAD,CAAL;AAAW;AARpC;AAFY,C;AA2F1B,MAAME,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAE,WADM;AAEdC,EAAAA,MAAM,EAAE,OAFM;AAGdC,EAAAA,MAAM,EAAE,UAHM;AAIdC,EAAAA,MAAM,EAAE,OAJM;AAKdC,EAAAA,MAAM,EAAE;AALM,CAAlB;;AASA,MAAMC,cAAN,SAA6BxE,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCoC,KAFmC,GAE3B,EAF2B;AAAA;;AAgBnCiB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEoB,MAAAA,IAAI,GAAG,EAAT;AAAanC,MAAAA,QAAb;AAAuBa,MAAAA,WAAvB;AAAoCG,MAAAA;AAApC,QAAmD,KAAKd,KAA9D;AAEA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AAAgB,MAAA,SAAS,EAAE5B,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAQ,oBAAW,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAE,CAA1B;AAA6B,MAAA,KAAK,EAAC,QAAnC;AAA4C,MAAA,SAAS,EAAC,IAAtD;AACiB,MAAA,KAAK,EAAC,KADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC8BsD,SAAS,CAACC,MADxC,CADJ,eAGI,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAE,CAA1B;AAA6B,MAAA,KAAK,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CD,SAAS,CAACE,MAAvD,CAHJ,eAII,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAE,CAA1B;AAA6B,MAAA,KAAK,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CF,SAAS,CAACI,MAAvD,CAJJ,eAKI,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAE,CAA1B;AAA6B,MAAA,KAAK,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CJ,SAAS,CAACK,MAAvD,CALJ,CADJ,CADJ,eAUI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQE,IAAI,CAACC,GAAL,CAAS,CAACnC,IAAD,EAAOoC,KAAP,kBACL,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEpC,IAAZ;AAAkB,MAAA,GAAG,EAAEoC,KAAvB;AAA8B,MAAA,QAAQ,EAAErC,QAAxC;AAAkD,MAAA,WAAW,EAAEa,WAA/D;AAA4E,MAAA,UAAU,EAAEG,UAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFR,CAVJ,CADJ,CADJ,CADJ;AAwBH;;AA3CkC;;AAAjCkB,c,CAIKf,U,GAAa;AAChBgB,EAAAA,IAAI,EAAEpE,SAAS,CAACuE,KADA;AAEhBtB,EAAAA,UAAU,EAAEjD,SAAS,CAACqD,OAFN;AAGhBH,EAAAA,eAAe,EAAElD,SAAS,CAACyD;AAHX,C;AAJlBU,c,CAUKT,Y,GAAe;AAClBU,EAAAA,IAAI,EAAE,EADY;AAElBnB,EAAAA,UAAU,EAAE,KAFM;AAGlBC,EAAAA,eAAe,EAAGS,EAAD,IAAQ;AAAEC,IAAAA,KAAK,CAACD,EAAD,CAAL;AAAW;AAHpB,C;AAoC1B,eAAe7C,OAAO,CAACqD,cAAD,CAAtB","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport PropTypes from \"prop-types\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport { DataContext } from '../app/app'\r\nimport {Link} from \"react-router-dom\";\r\nimport withHoc from './tableHoc';\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: theme.palette.common.black,\r\n            color: theme.palette.common.white,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n        },\r\n    }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n            },\r\n        },\r\n    }),\r\n)(TableRow);\r\n\r\nclass Item extends Component {\r\n\r\n    state = {};\r\n\r\n    static propsTypes = {\r\n        isBookmark: PropTypes.boolean,\r\n        item: PropTypes.shape({\r\n            subreddit: PropTypes.string,\r\n            title: PropTypes.string,\r\n            score: PropTypes.number,\r\n            thumbnail: PropTypes.string,\r\n            url: PropTypes.string,\r\n            selftext: PropTypes.string,\r\n            permalink: PropTypes.string,\r\n            changePermaLink: PropTypes.func,\r\n        })\r\n    };\r\n\r\n    static defaultProps = {\r\n        isBookmark: false,\r\n        item: {\r\n            subreddit: 'no content',\r\n            title: 'no content',\r\n            score: 0,\r\n            thumbnail: 'no content',\r\n            url: 'no content',\r\n            selftext: 'no content',\r\n            permalink: 'no content',\r\n            changePermaLink: (vl) => { alert(vl) },\r\n        }\r\n    };\r\n\r\n    saveTopic = () => {\r\n        return () => {\r\n            const {addTopic, item } = this.props;\r\n            addTopic({\r\n                score: item.score,\r\n                title: item.title,\r\n                subreddit: item.subreddit,\r\n                thumbnail: item.thumbnail,\r\n                url: item.url,\r\n                selftext: item.selftext,\r\n                permalink: item.permalink,\r\n                author: item.author,\r\n                created: item.created,\r\n            });\r\n        }\r\n    };\r\n\r\n    deleteBookMark = () => {\r\n        return () => {\r\n            const {deleteTopic, item} = this.props;\r\n            deleteTopic({id: item.id})\r\n        }\r\n    };\r\n\r\n    render(){\r\n        // , thumbnail, url, selftext, permalink\r\n        const { subreddit, title, score, permalink, isBookmark = false } = this.props.item;\r\n\r\n        return (\r\n            <DataContext.Consumer>\r\n                {({changePermaLink, count}) => (\r\n                    <StyledTableRow>\r\n                        <StyledTableCell colSpan={3} align=\"justify\" component=\"th\"\r\n                                         scope=\"row\"> {subreddit} </StyledTableCell>\r\n                        <StyledTableCell colSpan={7} align=\"justify\">{title}</StyledTableCell>\r\n                        <StyledTableCell colSpan={1} align=\"center\">{score}</StyledTableCell>\r\n                        <StyledTableCell colSpan={1} align=\"center\" >\r\n                            <ButtonGroup\r\n                                orientation=\"vertical\"\r\n                                color=\"inherit\"\r\n                                aria-label=\"vertical outlined primary button group\"\r\n                            >\r\n                                <Link to={'/topic'}>\r\n                                    <Button\r\n                                        onClick={changePermaLink(permalink)}\r\n                                        endIcon={<NavigateNextIcon/>}\r\n\r\n                                    >\r\n                                        read\r\n                                    </Button>\r\n                                </Link>\r\n\r\n                                <Button\r\n                                    endIcon={<BookmarkIcon/>}\r\n                                    onClick={this.saveTopic()}\r\n                                    disabled={!isBookmark}\r\n                                >\r\n                                    save\r\n                                </Button>\r\n                                <Button\r\n                                    endIcon={<BookmarkIcon/>}\r\n                                    onClick={this.deleteBookMark()}\r\n                                    disabled={!isBookmark}\r\n                                >\r\n                                    delete\r\n                                </Button>\r\n\r\n\r\n                            </ButtonGroup>\r\n                        </StyledTableCell>\r\n                    </StyledTableRow>\r\n                )}\r\n            </DataContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nconst headNames = {\r\n    title1: 'Subreddit',\r\n    title2: 'Title',\r\n    title3: 'Selftext',\r\n    title4: 'Score',\r\n    title5: 'Action',\r\n};\r\n\r\n\r\nclass TableComponent extends Component {\r\n\r\n    state = { };\r\n\r\n    static propsTypes = {\r\n        list: PropTypes.array,\r\n        isBookmark: PropTypes.boolean,\r\n        changePermaLink: PropTypes.func,\r\n    };\r\n\r\n    static defaultProps = {\r\n        list: [],\r\n        isBookmark: false,\r\n        changePermaLink: (vl) => { alert(vl) },\r\n    };\r\n\r\n    render() {\r\n        const { list = [], addTopic, deleteTopic, isBookmark } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableContainer component={Paper}>\r\n                    <Table  aria-label=\"customized table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell colSpan={3} align=\"center\" component=\"th\"\r\n                                                 scope=\"row\">{headNames.title1}</StyledTableCell>\r\n                                <StyledTableCell colSpan={7} align=\"center\">{headNames.title2}</StyledTableCell>\r\n                                <StyledTableCell colSpan={1} align=\"center\">{headNames.title4}</StyledTableCell>\r\n                                <StyledTableCell colSpan={1} align=\"center\">{headNames.title5}</StyledTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                list.map((item, index) =>\r\n                                    <Item item={item} key={index} addTopic={addTopic} deleteTopic={deleteTopic} isBookmark={isBookmark}/>\r\n                                )\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withHoc(TableComponent);"]},"metadata":{},"sourceType":"module"}