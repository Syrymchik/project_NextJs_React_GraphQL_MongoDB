{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Good\\\\Desktop\\\\Graphql\\\\gateway\\\\src\\\\16_rest_api\\\\rest_api.jsx\";\nimport React, { Component } from 'react';\nimport News from './news_fragment';\nconst BASE_API = 'https://hn.algolia.com/api/v1';\nconst SEARCH_PATH = '/search';\nconst SEARCH_PARAM = 'query=';\n\nclass Api extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchQuery: '',\n      result: {}\n    };\n\n    this.setNews = result => {\n      this.setState({\n        result\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      searchQuery\n    } = this.state;\n    fetch(BASE_API + SEARCH_PATH + '?' + SEARCH_PARAM + searchQuery).then(res => res.json).then(result => this.setNews(result)).catch(error => console.log(error));\n  }\n\n  render() {\n    const {\n      searchQuery,\n      result\n    } = this.state;\n    const {\n      hits\n    } = result;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, hits.map(({\n      author,\n      created_at,\n      num_comments,\n      objectID,\n      title,\n      points,\n      url\n    }) => {\n      /*#__PURE__*/\n      React.createElement(News, {\n        key: objectID,\n        author: author,\n        created: created_at,\n        num_comments: num_comments,\n        title: title,\n        points: points,\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      });\n    }), /*#__PURE__*/React.createElement(News, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Api;","map":{"version":3,"sources":["C:/Users/Good/Desktop/Graphql/gateway/src/16_rest_api/rest_api.jsx"],"names":["React","Component","News","BASE_API","SEARCH_PATH","SEARCH_PARAM","Api","state","searchQuery","result","setNews","setState","componentDidMount","fetch","then","res","json","catch","error","console","log","render","hits","map","author","created_at","num_comments","objectID","title","points","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,MAAMC,QAAQ,GAAG,+BAAjB;AACA,MAAMC,WAAW,GAAG,SAApB;AACA,MAAMC,YAAY,GAAG,QAArB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBM,KAFwB,GAEhB;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAFgB;;AAAA,SAexBC,OAfwB,GAedD,MAAM,IAAI;AAChB,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AAEH,KAlBuB;AAAA;;AAOxBG,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEJ,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACAM,IAAAA,KAAK,CAACV,QAAQ,GAAGC,WAAX,GAAyB,GAAzB,GAA+BC,YAA/B,GAA8CG,WAA/C,CAAL,CACKM,IADL,CACWC,GAAG,IAAIA,GAAG,CAACC,IADtB,EAEKF,IAFL,CAEWL,MAAM,IAAI,KAAKC,OAAL,CAAaD,MAAb,CAFrB,EAGKQ,KAHL,CAGYC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHrB;AAIH;;AAODG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA0B,KAAKF,KAArC;AACA,UAAM;AAAEe,MAAAA;AAAF,QAAWb,MAAjB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQa,IAAI,CAACC,GAAL,CAAS,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,UAAV;AAAsBC,MAAAA,YAAtB;AAAoCC,MAAAA,QAApC;AAA8CC,MAAAA,KAA9C;AAAqDC,MAAAA,MAArD;AAA6DC,MAAAA;AAA7D,KAAD,KAAwE;AAC7E;AAAA,0BAAC,IAAD;AACI,QAAA,GAAG,EAAEH,QADT;AAEI,QAAA,MAAM,EAAEH,MAFZ;AAGI,QAAA,OAAO,EAAEC,UAHb;AAII,QAAA,YAAY,EAAEC,YAJlB;AAKI,QAAA,KAAK,EAAEE,KALX;AAMI,QAAA,MAAM,EAAEC,MANZ;AAOI,QAAA,GAAG,EAAEC,GAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASH,KAVD,CAFR,eAcI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,CADJ;AAkBH;;AA1CuB;;AA8C5B,eAAexB,GAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport News from './news_fragment';\r\n\r\nconst BASE_API = 'https://hn.algolia.com/api/v1';\r\nconst SEARCH_PATH = '/search';\r\nconst SEARCH_PARAM = 'query=';\r\n\r\nclass Api extends Component {\r\n\r\n    state = {\r\n        searchQuery: '',\r\n        result: {},\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { searchQuery } = this.state;\r\n        fetch(BASE_API + SEARCH_PATH + '?' + SEARCH_PARAM + searchQuery)\r\n            .then( res => res.json )\r\n            .then( result => this.setNews(result))\r\n            .catch( error => console.log(error))\r\n    }\r\n\r\n    setNews = result => {\r\n        this.setState({ result })\r\n\r\n    };\r\n\r\n    render() {\r\n        const { searchQuery, result } = this.state;\r\n        const { hits } = result;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    hits.map(({ author, created_at, num_comments, objectID, title, points, url }) => {\r\n                        <News\r\n                            key={objectID}\r\n                            author={author}\r\n                            created={created_at}\r\n                            num_comments={num_comments}\r\n                            title={title}\r\n                            points={points}\r\n                            url={url}\r\n                        />\r\n                    }                    )\r\n                }\r\n                <News  ></News>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Api"]},"metadata":{},"sourceType":"module"}