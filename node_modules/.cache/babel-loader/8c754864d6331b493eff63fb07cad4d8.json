{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Good\\\\Desktop\\\\Graphql\\\\gateway\\\\src\\\\component\\\\table\\\\table.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from \"prop-types\";\n\nclass Item extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      subreddit,\n      title,\n      score,\n      thumbnail,\n      url,\n      selftext,\n      permalink\n    } = this.props.item;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, subreddit), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, score), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, thumbnail), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, url), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, selftext), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, permalink));\n  }\n\n}\n\nItem.propsTypes = {\n  item: PropTypes.shape({\n    subreddit: PropTypes.string,\n    title: PropTypes.string,\n    score: PropTypes.number,\n    thumbnail: PropTypes.string,\n    url: PropTypes.string,\n    selftext: PropTypes.string,\n    permalink: PropTypes.string\n  })\n};\nItem.defaultProps = {\n  item: {\n    subreddit: 'no content',\n    title: 'no content',\n    score: 0,\n    thumbnail: 'no content',\n    url: 'no content',\n    selftext: 'no content',\n    permalink: 'no content'\n  }\n};\n\nclass Table extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      list = []\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, list.map(item => /*#__PURE__*/React.createElement(Item, {\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nTable.propsTypes = {\n  list: PropTypes.array\n};\nTable.defaultProps = {\n  list: []\n};\nexport default Table;","map":{"version":3,"sources":["C:/Users/Good/Desktop/Graphql/gateway/src/component/table/table.jsx"],"names":["React","Component","Fragment","PropTypes","Item","state","render","subreddit","title","score","thumbnail","url","selftext","permalink","props","item","propsTypes","shape","string","number","defaultProps","Table","list","map","array"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nclass Item extends Component {\r\n\r\n    state = {};\r\n\r\n    static propsTypes = {\r\n        item: PropTypes.shape({\r\n            subreddit: PropTypes.string,\r\n            title: PropTypes.string,\r\n            score: PropTypes.number,\r\n            thumbnail: PropTypes.string,\r\n            url: PropTypes.string,\r\n            selftext: PropTypes.string,\r\n            permalink: PropTypes.string,\r\n        })\r\n    };\r\n\r\n    static defaultProps = {\r\n        item: {\r\n            subreddit: 'no content',\r\n            title: 'no content',\r\n            score: 0,\r\n            thumbnail: 'no content',\r\n            url: 'no content',\r\n            selftext: 'no content',\r\n            permalink: 'no content',\r\n        }\r\n    };\r\n\r\n    render(){\r\n        const { subreddit, title, score, thumbnail, url, selftext, permalink } = this.props.item;\r\n        return (\r\n            <tr>\r\n                <td>{ subreddit }</td>\r\n                <td>{ title }</td>\r\n                <td>{ score }</td>\r\n                <td>{ thumbnail }</td>\r\n                <td>{ url }</td>\r\n                <td>{ selftext }</td>\r\n                <td>{ permalink }</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass Table extends Component {\r\n\r\n    state = { };\r\n\r\n    static propsTypes = {\r\n        list: PropTypes.array\r\n    };\r\n\r\n    static defaultProps = {\r\n        list: []\r\n    };\r\n\r\n    render() {\r\n        const { list = [] } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <table>\r\n                    <tbody>\r\n                    {\r\n                        list.map(item =>\r\n                            <Item item={item}/>\r\n                        )\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}